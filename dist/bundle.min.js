/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/add-employee.js":
/*!********************************!*\
  !*** ./src/js/add-employee.js ***!
  \********************************/
/***/ (() => {

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var regEmployee = function regEmployee() {
  var buttonsGroupPost = document.querySelectorAll('.buttons-group-post.add-post button');
  if (buttonsGroupPost.length > 0) {
    var companyName = document.querySelector('#company-name');
    var titleAddForm = document.querySelector('#head-title-add-form span');
    buttonsGroupPost.forEach(function (btn) {
      // console.dir(btn.parentElement.parentElement);

      btn.addEventListener('click', function (e) {
        if (btn.id == 'btn-cancel-employee-form') {
          e.preventDefault();
          btn.parentElement.parentElement.parentElement.classList.remove('active');
          btn.parentElement.parentElement.reset();
          btn.parentElement.parentElement.previousElementSibling.children[0].children[0].innerText = btn.dataset.title;
          btn.parentElement.parentElement.previousElementSibling.children[0].children[1].classList.remove('active');
          btn.parentElement.parentElement.previousElementSibling.children[0].children[2].innerText = '';
        } else if (btn.id == 'btn-save-employee-form') {
          e.preventDefault();
          if (employeeInputValidate(btn.parentElement.parentElement)) {
            var formAuthorNonce = document.querySelector('form#author_nonce');
            var formNonce = new FormData(formAuthorNonce);
            var formData = new FormData(btn.parentElement.parentElement);
            formData.append('action', 'press_net_register_employee');
            var _iterator = _createForOfIteratorHelper(formNonce),
              _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                var _step$value = _slicedToArray(_step.value, 2),
                  name = _step$value[0],
                  value = _step$value[1];
                formData.append(name, value);
                // console.dir(`${name} = ${value}`); // key1=value1, потом key2=value2
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            addFormNameInputRequired(btn.parentElement.parentElement.querySelectorAll('*[required]'), formData);
            // console.dir(Array.from(formData));
            jQuery(document).ready(function ($) {
              $.ajax({
                type: 'POST',
                url: '/wp-admin/admin-ajax.php',
                processData: false,
                contentType: false,
                data: formData,
                success: function success(data) {
                  console.dir(data);
                  // let data_fin = JSON.parse(data)
                  // console.dir(data);
                  setTimeout(function () {
                    location.reload();
                  }, 1000);
                },
                error: function error() {
                  console.log('Ошибка отправки.');
                }
              });
            });
          } else {
            console.dir('Field is required');
          }
        }
      });
    });
  }
};
regEmployee();
var employeeImageUpload = function employeeImageUpload() {
  var inputEmployeeImage = document.querySelector('#employee_image_upload');
  if (inputEmployeeImage) {
    result = inputEmployeeImage.previousElementSibling.children[0];
    inputEmployeeImage.addEventListener('change', function (e) {
      employeeImageChange(inputEmployeeImage, result);
    });
  }
};
employeeImageUpload();
function employeeImageChange(input, result) {
  FReader = new FileReader();
  FReader.onload = function (e) {
    result.src = e.target.result;
  };
  var file = input.files[0];
  FReader.readAsDataURL(file);
}
function employeeInputValidate(form) {
  var formInputs = form.querySelectorAll('*[required]');
  var inputsNoVal = 0;
  formInputs.forEach(function (input) {
    if (!input.value) {
      ++inputsNoVal;
      input.parentElement.nextElementSibling.classList.add('active');
    } else {
      input.parentElement.nextElementSibling.classList.remove('active');
    }
  });
  if (inputsNoVal > 0) {
    return false;
  } else {
    return true;
  }
}
function addFormNameInputRequired(inputsRequired, formData) {
  var inputs_req = [];
  var _iterator2 = _createForOfIteratorHelper(inputsRequired),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var node = _step2.value;
      inputs_req.push(node.name);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  var ir = inputs_req.join(',');
  formData.append('inputs_required', ir);
}

/***/ }),

/***/ "./src/js/add-post.js":
/*!****************************!*\
  !*** ./src/js/add-post.js ***!
  \****************************/
/***/ (() => {

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var formOpen = function formOpen() {
  var btnFormOpen = document.querySelectorAll('#btn-add-post-form-open');
  if (btnFormOpen.length > 0) {
    var buttonsGroupPost = document.querySelectorAll('.buttons-group-post button');
    var companyName = document.querySelector('#company-name');
    btnFormOpen.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        btn.nextElementSibling.classList.add('active');
      });
    });
  }
};
formOpen();
var headTitleName = function headTitleName() {
  var archiveAuthor = document.querySelector('.archive.author');
  if (archiveAuthor) {
    var formAddRequest = document.querySelector('form#form-add-request');
    var postTitle = document.querySelectorAll('#post_title');
    var jobTitle = document.querySelectorAll('#job_title');
    if (!formAddRequest && postTitle.length > 0) {
      postTitle.forEach(function (item) {
        item.addEventListener('input', function (e) {
          item.form.previousElementSibling.children[0].children[0].innerText = item.value;
        });
      });
    }
    if (jobTitle.length > 0) {
      jobTitle.forEach(function (item) {
        item.addEventListener('input', function (e) {
          if (item.value.length > 0) {
            item.form.previousElementSibling.children[0].children[1].classList.add('active');
          } else {
            item.form.previousElementSibling.children[0].children[1].classList.remove('active');
          }
          item.form.previousElementSibling.children[0].children[2].innerText = item.value;
        });
      });
    }
  }
};
headTitleName();
var formAddPost = function formAddPost() {
  var buttonsGroupPost = document.querySelectorAll('.buttons-group-post.add-post button');
  if (buttonsGroupPost.length > 0) {
    var companyName = document.querySelector('#company-name');
    var titleAddForm = document.querySelector('#head-title-add-form span');
    buttonsGroupPost.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        if (btn.id == 'btn-cancel-post-form') {
          e.preventDefault();
          btn.parentElement.parentElement.parentElement.classList.remove('active');
          btn.parentElement.parentElement.reset();
          btn.parentElement.parentElement.previousElementSibling.children[0].children[0].innerText = btn.dataset.title;
          btn.parentElement.parentElement.previousElementSibling.children[0].children[1].classList.remove('active');
          btn.parentElement.parentElement.previousElementSibling.children[0].children[2].innerText = '';
          // titleAddForm.innerText = 'New company'
        } else if (btn.id == 'btn-cancel-post-form-request') {
          btn.parentElement.parentElement.reset();
        } else if (btn.id == 'btn-save-post-form') {
          e.preventDefault();
          if (inputValidate(btn.parentElement.parentElement)) {
            var formAuthorNonce = document.querySelector('form#author_nonce');
            var formNonce = new FormData(formAuthorNonce);
            var formData = new FormData(btn.parentElement.parentElement);
            formData.append('action', 'press_net_add_post');
            var _iterator = _createForOfIteratorHelper(formNonce),
              _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                var _step$value = _slicedToArray(_step.value, 2),
                  name = _step$value[0],
                  value = _step$value[1];
                formData.append(name, value);
                // console.dir(`${name} = ${value}`); // key1=value1, потом key2=value2
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            jQuery(document).ready(function ($) {
              $.ajax({
                type: 'POST',
                url: '/wp-admin/admin-ajax.php',
                processData: false,
                contentType: false,
                data: formData,
                success: function success(data) {
                  // console.dir(data);
                  // let data_fin = JSON.parse(data)
                  // console.dir(data);
                  setTimeout(function () {
                    location.reload();
                  }, 1000);
                },
                error: function error() {
                  console.log('Ошибка отправки.');
                }
              });
            });
          } else {
            console.dir('Field is required');
          }
        }
      });
    });
  }
};
formAddPost();
var formEditOpen = function formEditOpen() {
  var btnFormEditOpen = document.querySelectorAll('#btn-edit-post-form-open');
  if (btnFormEditOpen.length > 0) {
    var buttonsGroupPost = document.querySelectorAll('.buttons-group-post button');
    btnFormEditOpen.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        btn.parentElement.parentElement.nextElementSibling.classList.toggle('active');
      });
    });
  }
};
formEditOpen();
var formEditPost = function formEditPost() {
  var buttonsGroupPost = document.querySelectorAll('.buttons-group-post.edit-post button');
  if (buttonsGroupPost.length > 0) {
    buttonsGroupPost.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        if (btn.id == 'btn-cancel-post-form') {
          e.preventDefault();
        } else if (btn.id == 'btn-edit-post-form') {
          e.preventDefault();
          if (inputValidate(btn.parentElement.parentElement)) {
            var formAuthorNonce = document.querySelector('form#author_nonce');
            var formNonce = new FormData(formAuthorNonce);
            var formData = new FormData(btn.parentElement.parentElement);
            formData.append('action', 'press_net_edit_post');
            var _iterator2 = _createForOfIteratorHelper(formNonce),
              _step2;
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                var _step2$value = _slicedToArray(_step2.value, 2),
                  name = _step2$value[0],
                  value = _step2$value[1];
                formData.append(name, value);
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            jQuery(document).ready(function ($) {
              $.ajax({
                type: 'POST',
                url: '/wp-admin/admin-ajax.php',
                processData: false,
                contentType: false,
                data: formData,
                success: function success(data) {
                  // console.dir(data);
                  btn.parentElement.parentElement.classList.remove('active');
                  btn.parentElement.parentElement.nextElementSibling.classList.add('active');
                  setTimeout(function () {
                    btn.parentElement.parentElement.nextElementSibling.classList.remove('active');
                  }, 400);
                  // let data_fin = JSON.parse(data)
                  // console.dir(data);
                },

                error: function error() {
                  console.log('Ошибка отправки.');
                }
              });
            });
          } else {
            console.dir('Field is required');
          }
        }
      });
    });
  }
};
formEditPost();
var formDeletePost = function formDeletePost() {
  var btnDeletePost = document.querySelectorAll('#btn-delete-post-form-open');
  if (btnDeletePost.length > 0) {
    var form = document.querySelector('form#author_nonce');
    btnDeletePost.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        console.dir(btn.dataset.post);
        var formData = new FormData(form);
        formData.append('action', 'press_net_delete_post');
        formData.append('post_id', btn.dataset.post);
        jQuery(document).ready(function ($) {
          $.ajax({
            type: 'POST',
            url: '/wp-admin/admin-ajax.php',
            processData: false,
            contentType: false,
            data: formData,
            success: function success(data) {
              console.log(data);
              btn.parentElement.parentElement.parentElement.remove();
              // var data_json = JSON.parse(data);
              // console.log(data_json);
              // location.reload();
            }
          });
        });
      });
    });
  }
};

formDeletePost();
var formAddPortfolio = function formAddPortfolio() {
  var formAddRequest = document.querySelector('form#form-add-request');
  var buttonsGroupPost = document.querySelectorAll('.buttons-group-post.add-port button');
  if (buttonsGroupPost.length > 0) {
    var companyName = document.querySelector('#company-name');
    var titleAddForm = document.querySelector('#head-title-add-form span');
    buttonsGroupPost.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        if (btn.id == 'btn-cancel-port-form') {
          e.preventDefault();
          btn.parentElement.parentElement.parentElement.classList.remove('active');
          btn.parentElement.parentElement.reset();
          btn.parentElement.parentElement.previousElementSibling.children[0].children[0].innerText = btn.dataset.title;
          btn.parentElement.parentElement.previousElementSibling.children[0].children[1].classList.remove('active');
          btn.parentElement.parentElement.previousElementSibling.children[0].children[2].innerText = '';
          // titleAddForm.innerText = 'New company'
        } else if (btn.id == 'btn-save-port-form') {
          e.preventDefault();
          if (inputValidate(btn.parentElement.parentElement)) {
            var formAuthorNonce = document.querySelector('form#author_nonce');
            var formNonce = new FormData(formAuthorNonce);
            var formData = new FormData(btn.parentElement.parentElement);
            formData.append('action', 'press_net_add_portfolio');
            var _iterator3 = _createForOfIteratorHelper(formNonce),
              _step3;
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                var _step3$value = _slicedToArray(_step3.value, 2),
                  name = _step3$value[0],
                  value = _step3$value[1];
                formData.append(name, value);
                // console.dir(`${name} = ${value}`); // key1=value1, потом key2=value2
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
            jQuery(document).ready(function ($) {
              $.ajax({
                type: 'POST',
                url: '/wp-admin/admin-ajax.php',
                processData: false,
                contentType: false,
                data: formData,
                success: function success(data) {
                  // console.dir(data);
                  // let data_fin = JSON.parse(data)
                  // console.dir(data);
                  setTimeout(function () {
                    location.reload();
                  }, 1000);
                },
                error: function error() {
                  console.log('Ошибка отправки.');
                }
              });
            });
          } else {
            console.dir('Field is required');
          }
        }
      });
    });
  }
};
formAddPortfolio();
var formEditPortfolio = function formEditPortfolio() {
  var buttonsGroupPost = document.querySelectorAll('.buttons-group-post.edit-post-portfolio button');
  if (buttonsGroupPost.length > 0) {
    buttonsGroupPost.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        if (btn.id == 'btn-cancel-post-form') {
          e.preventDefault();
        } else if (btn.id == 'btn-edit-post-form') {
          e.preventDefault();
          if (inputValidate(btn.parentElement.parentElement)) {
            var formAuthorNonce = document.querySelector('form#author_nonce');
            var formNonce = new FormData(formAuthorNonce);
            var formData = new FormData(btn.parentElement.parentElement);
            formData.append('action', 'press_net_edit_portfolio');
            var _iterator4 = _createForOfIteratorHelper(formNonce),
              _step4;
            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                var _step4$value = _slicedToArray(_step4.value, 2),
                  name = _step4$value[0],
                  value = _step4$value[1];
                formData.append(name, value);
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
            jQuery(document).ready(function ($) {
              $.ajax({
                type: 'POST',
                url: '/wp-admin/admin-ajax.php',
                processData: false,
                contentType: false,
                data: formData,
                success: function success(data) {
                  btn.parentElement.parentElement.classList.remove('active');
                  btn.parentElement.parentElement.nextElementSibling.classList.add('active');
                  setTimeout(function () {
                    btn.parentElement.parentElement.nextElementSibling.classList.remove('active');
                  }, 3000);
                  // let data_fin = JSON.parse(data)
                  // console.dir(data);
                },

                error: function error() {
                  console.log('Ошибка отправки.');
                }
              });
            });
          } else {
            console.dir('Field is required');
          }
        }
      });
    });
  }
};
formEditPortfolio();
var formDeletePortfolio = function formDeletePortfolio() {
  var btnDeletePost = document.querySelectorAll('#btn-delete-post-form-open-portfolio');
  if (btnDeletePost.length > 0) {
    btnDeletePost.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        var formAuthorNonce = document.querySelector('form#author_nonce');
        var formNonce = new FormData(formAuthorNonce);
        var formData = new FormData(btn.parentElement.parentElement.nextElementSibling);
        formData.append('action', 'press_net_delete_portfolio');
        var _iterator5 = _createForOfIteratorHelper(formNonce),
          _step5;
        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var _step5$value = _slicedToArray(_step5.value, 2),
              name = _step5$value[0],
              value = _step5$value[1];
            formData.append(name, value);
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
        jQuery(document).ready(function ($) {
          $.ajax({
            type: 'POST',
            url: '/wp-admin/admin-ajax.php',
            processData: false,
            contentType: false,
            data: formData,
            success: function success(data) {
              console.log(data);
              btn.parentElement.parentElement.parentElement.remove();
              // var data_json = JSON.parse(data);
              // console.log(data_json);
              // location.reload();
            }
          });
        });
      });
    });
  }
};

formDeletePortfolio();
function btnCancelEditPost(divButtons) {
  if (divButtons) {
    var _btnCancelEditPost = divButtons.querySelectorAll('#btn-cancel-edit-post-form');
    if (_btnCancelEditPost.length > 0) {
      _btnCancelEditPost.forEach(function (btn) {
        btn.addEventListener('click', function (e) {
          btn.form.querySelectorAll('input').forEach(function (input) {
            if (input.id !== 'post_type' && input.name !== 'my_image_upload') {
              input.value = input.attributes.value.value;
            }
          });
          btn.form.previousElementSibling.children[0].children[0].innerText = btn.form[0].attributes.value.value;
          if (btn.form.previousElementSibling.children[0].children[2]) {
            btn.form.previousElementSibling.children[0].children[2].innerText = btn.form[1].attributes.value.value;
          }
          setTimeout(function () {
            btn.form.classList.remove('active');
          }, 400);
        });
      });
    }
  }
}
btnCancelEditPost(document.querySelector('.author-wrap__main-your-office')); // author-wrap__main-your-office

function inputValidate(form) {
  var formInputs = form.querySelectorAll('*[required]');
  var inputsNoVal = 0;
  formInputs.forEach(function (input) {
    if (!input.value) {
      ++inputsNoVal;
      input.parentElement.nextElementSibling.classList.add('active');
    } else {
      if (input.value == 0) {
        ++inputsNoVal;
        input.parentElement.nextElementSibling.classList.add('active');
      } else if (input.value == 'Need to publish media') {
        ++inputsNoVal;
        input.parentElement.nextElementSibling.classList.add('active');
      } else {
        input.parentElement.nextElementSibling.classList.remove('active');
      }
    }
  });
  if (inputsNoVal > 0) {
    return false;
  } else {
    return true;
  }
  // console.dir(inputsNoVal);
}

var formEditPostRequest = function formEditPostRequest() {
  var formEditRequest = document.querySelector('form#form-edit-request');
  if (formEditRequest) {
    var btnEdit = document.querySelector('#btn-edit-post-form');
    btnEdit.addEventListener('click', function (e) {
      e.preventDefault();
      if (inputValidate(btnEdit.parentElement.parentElement)) {
        var formAll = document.querySelector('#form-all');
        var formNonce = new FormData(formAll);
        var formData = new FormData(btnEdit.parentElement.parentElement);
        formData.append('action', 'edit_post_page');
        var _iterator6 = _createForOfIteratorHelper(formNonce),
          _step6;
        try {
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            var _step6$value = _slicedToArray(_step6.value, 2),
              name = _step6$value[0],
              value = _step6$value[1];
            formData.append(name, value);
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
        jQuery(document).ready(function ($) {
          $.ajax({
            type: 'POST',
            url: '/wp-admin/admin-ajax.php',
            processData: false,
            contentType: false,
            data: formData,
            success: function success(data) {
              console.log(data);
              var data_json = JSON.parse(data);
              if (data_json.success == 'Success') {
                window.location.href = data_json.url;
              }
              // console.log(data_json.url);
              // window.location.href = data_json.url;
            }
          });
        });
      } else {
        console.dir('Field is required');
      }
    });
  }
};
formEditPostRequest();
var formDeleteLogo = function formDeleteLogo() {
  var logoDeleteBtns = document.querySelectorAll('form #button-logo-delete');
  if (logoDeleteBtns.length > 0) {
    logoDeleteBtns.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        btn.parentElement.previousElementSibling.children[0].src = '/wp-content/themes/press-net/img/icons/media-logo-no.svg';
        btn.nextElementSibling.value = 'yes';
        btn.remove();
      });
    });
  }
};
formDeleteLogo();

/***/ }),

/***/ "./src/js/auth-reg.js":
/*!****************************!*\
  !*** ./src/js/auth-reg.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _gen_pass_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gen-pass.js */ "./src/js/gen-pass.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

var authForm = function authForm() {
  var userLogin = document.querySelector('#user_login');
  var userPass = document.querySelector('#user_pass');
  var wpSubmit = document.querySelector('#wp-submit');
  if (userLogin) {
    userLogin.addEventListener('input', function (e) {
      if (userLogin.value.length > 0 && userPass.value.length > 0) {
        wpSubmit.disabled = false;
        wpSubmit.style.opacity = 1;
        wpSubmit.style.cursor = 'pointer';
        wpSubmit.style.pointerEvents = 'auto';
        wpSubmit.classList.add("button-sliding-icon");
      } else {
        wpSubmit.disabled = true;
        wpSubmit.style.opacity = '';
        wpSubmit.style.cursor = '';
        wpSubmit.style.pointerEvents = '';
        wpSubmit.classList.remove("button-sliding-icon");
      }
    });
    userPass.addEventListener('input', function (e) {
      if (userLogin.value.length > 0 && userPass.value.length > 0) {
        wpSubmit.disabled = false;
        wpSubmit.style.opacity = 1;
        wpSubmit.style.cursor = 'pointer';
        wpSubmit.style.pointerEvents = 'auto';
        wpSubmit.classList.add("button-sliding-icon");
      } else {
        wpSubmit.disabled = true;
        wpSubmit.style.opacity = '';
        wpSubmit.style.cursor = '';
        wpSubmit.style.pointerEvents = '';
        wpSubmit.classList.remove("button-sliding-icon");
      }
    });
  }
};
authForm();
var forgotPassUser = function forgotPassUser() {
  var userEmail = document.querySelector('#user_email');
  var submitForgotPassword = document.querySelector('#forgot-password');
  var emaiWarningInput = document.querySelector('.user-email-forgot .warning-input');
  var forgotPasswordNonce = document.querySelector('#exchange_forgot_password');
  var formContent = document.querySelector('.form-content');
  var forgotPasswordEnd = document.querySelector('.forgot-password-end');
  var warningLogin = document.querySelector('.warning-text');
  if (submitForgotPassword) {
    userEmail.addEventListener('input', function (e) {
      if (emailValidation(userEmail.value)) {
        submitForgotPassword.disabled = false;
        emaiWarningInput.classList.remove("active");
        submitForgotPassword.classList.add("button-sliding-icon");
        submitForgotPassword.style.opacity = 1;
        submitForgotPassword.style.cursor = 'pointer';
        submitForgotPassword.style.pointerEvents = 'auto';
      } else {
        submitForgotPassword.disabled = true;
        emaiWarningInput.classList.add("active");
        submitForgotPassword.classList.remove("button-sliding-icon");
        submitForgotPassword.style.opacity = '';
        submitForgotPassword.style.cursor = '';
        submitForgotPassword.style.pointerEvents = '';
      }
    });
    submitForgotPassword.addEventListener('click', function (e) {
      console.log('Yes');
      var userEmailVal = userEmail.value;
      var nonce = forgotPasswordNonce.value;
      if (userEmailVal) {
        jQuery(document).ready(function ($) {
          $.ajax({
            type: 'POST',
            url: '/wp-admin/admin-ajax.php',
            data: {
              action: 'emailverifi',
              "email_forgot": userEmailVal,
              "nonce": nonce
            },
            success: function success(data) {
              var data_fin = JSON.parse(data);
              if (data_fin["class"] == 'errors') {
                console.dir(data_fin.no_user);
                warningLogin.classList.add("active");
                userEmail.value = '';
              } else {
                console.dir(data_fin["class"]);
                console.dir(data_fin.error_send_mail);
                // formContent.style.display = 'none'
                warningLogin.classList.remove("active");
                forgotPasswordEnd.style.display = 'block';
              }
              //location.reload();
              //popupAddReviews.classList.remove('popup--opened')
            },

            error: function error() {
              console.log('Ошибка отправки.');
            }
          });
        });
      }
    });
  }
};
forgotPassUser();
var rememberPassUser = function rememberPassUser() {
  var rememberPasswordForm = document.querySelector('#remember-password-form');
  if (rememberPasswordForm) {
    var newUserPass = document.querySelector('#new_user_pass');
    var newUserPassRepeat = document.querySelector('#new_user_pass_repeat');
    var rememberPasswordSubmit = document.querySelector('#remember-password');
    var passRegSpan = document.querySelector('#pass-reg-span');
    var passRegRepSpan = document.querySelector('#pass-reg-rep-span');
    var passRegSpanRegex = document.querySelector('#pass-reg-span-regex');
    var passRegRepSpanRegex = document.querySelector('#pass-reg-rep-span-regex');
    var btnGeneratePassword = document.querySelector('#generate-password');
    var nonce = document.querySelector('#new_user_pass_nonce');
    newUserPass.addEventListener('input', function (e) {
      if (userPassValidation(newUserPass.value)) {
        rememberPasswordSubmit.disabled = false;
        passRegSpanRegex.classList.remove("active");
      } else {
        rememberPasswordSubmit.disabled = true;
        passRegSpanRegex.classList.add("active");
      }
    });
    newUserPass.addEventListener('input', function (e) {
      if (userPassValidation(newUserPass.value) && newUserPass.value == newUserPassRepeat.value) {
        rememberPasswordSubmit.disabled = false;
        rememberPasswordSubmit.classList.add("button-sliding-icon");
        rememberPasswordSubmit.style.opacity = 1;
        rememberPasswordSubmit.style.cursor = 'pointer';
        rememberPasswordSubmit.style.pointerEvents = 'auto';
      } else {
        rememberPasswordSubmit.disabled = true;
        rememberPasswordSubmit.classList.remove("button-sliding-icon");
        rememberPasswordSubmit.style.opacity = '';
        rememberPasswordSubmit.style.cursor = '';
        rememberPasswordSubmit.style.pointerEvents = '';
      }
    });
    newUserPassRepeat.addEventListener('input', function (e) {
      if (newUserPass.value == newUserPassRepeat.value) {
        rememberPasswordSubmit.disabled = false;
        passRegRepSpanRegex.classList.remove("active");
      } else {
        rememberPasswordSubmit.disabled = true;
        passRegRepSpanRegex.classList.add("active");
      }
    });
    newUserPassRepeat.addEventListener('input', function (e) {
      if (userPassValidation(newUserPass.value) && newUserPass.value == newUserPassRepeat.value) {
        rememberPasswordSubmit.disabled = false;
        rememberPasswordSubmit.classList.add("button-sliding-icon");
        rememberPasswordSubmit.style.opacity = 1;
        rememberPasswordSubmit.style.cursor = 'pointer';
        rememberPasswordSubmit.style.pointerEvents = 'auto';
      } else {
        rememberPasswordSubmit.disabled = true;
        rememberPasswordSubmit.classList.remove("button-sliding-icon");
        rememberPasswordSubmit.style.opacity = '';
        rememberPasswordSubmit.style.cursor = '';
        rememberPasswordSubmit.style.pointerEvents = '';
      }
    });
    btnGeneratePassword.addEventListener('click', function (e) {
      e.preventDefault();
      // genpass(12, 3, '#new_user_pass', '#new_user_pass_repeat')
      var newPasswordVal = _gen_pass_js__WEBPACK_IMPORTED_MODULE_0__.genPassword.get(12, 1, 1, 1);
      newUserPass.value = newPasswordVal;
      newUserPassRepeat.value = newPasswordVal;
      rememberPasswordSubmit.disabled = false;
      rememberPasswordSubmit.classList.add("button-sliding-icon");
      rememberPasswordSubmit.style.opacity = 1;
      rememberPasswordSubmit.style.cursor = 'pointer';
      rememberPasswordSubmit.style.pointerEvents = 'auto';
      passRegSpanRegex.classList.remove("active");
      passRegRepSpanRegex.classList.remove("active");
    });
    rememberPasswordSubmit.addEventListener('click', function (e) {
      e.preventDefault();
      if (newUserPass.value == newUserPassRepeat.value) {
        var key = getParameter("key");
        var login = getParameter("login");
        jQuery(document).ready(function ($) {
          $.ajax({
            type: 'POST',
            url: '/wp-admin/admin-ajax.php',
            data: {
              action: 'new_user_pass',
              "key": key,
              "login": login,
              "pass": newUserPass.value,
              "nonce": nonce.value
            },
            success: function success(data) {
              var data_fin = JSON.parse(data);
              if (data_fin["class"] == 'errors') {
                console.dir(data_fin);
                for (var key in data_fin) {
                  if (key !== 'class') {
                    document.querySelector('.notif-custom-reg').insertAdjacentHTML('beforeend', "\n                                        <div class=\"notification closeable error\">\n                                        <p>".concat(data_fin[key], "</p>\n                                        <a class=\"close\" href=\"#\"></a>\n                                        </div>"));
                  }
                }
              } else {
                console.dir(data_fin);
                for (var key in data_fin) {
                  if (key !== 'class') {
                    document.querySelector('.notif-custom-reg').insertAdjacentHTML('beforeend', "\n                                        <div class=\"notification closeable success\">\n                                        <p>".concat(data_fin[key], "</p>\n                                        <a class=\"close\" href=\"#\"></a>\n                                        </div>"));
                  }
                }
                setTimeout(function () {
                  document.location.href = '/login';
                }, 4000);
              }
              //location.reload();
              //popupAddReviews.classList.remove('popup--opened')
            },

            error: function error() {
              console.log('Send error.');
            }
          });
        });
      } else {
        rememberPasswordSubmit.disabled = true;
        passRegRepSpanRegex.style.display = 'block';
      }
    });
  }
};
rememberPassUser();
var regUser = function regUser() {
  var loginRegisterPage = document.querySelector('#register-page');
  if (loginRegisterPage) {
    var firstName = document.querySelector('#first_name');
    var firstNameWarningInput = document.querySelector('.user-first-name .warning-input');
    var lastName = document.querySelector('#last_name');
    var lastNameWarningInput = document.querySelector('.user-last-name .warning-input');
    var emailAddress = document.querySelector('#email_register');
    var emaiWarningInput = document.querySelector('.user-email-register .warning-input');
    var _password = document.querySelector('#password_register');
    var passRegSpanRegex = document.querySelector('#pass-reg-span-regex');
    var nonce = document.querySelector('#exchange_register');
    var registerAccountSubmit = document.querySelector('#register-account-submit');
    var regEnd = document.querySelector('.reg-end');
    var welcomeText = document.querySelector('.reg-page .reg-end');
    var form = document.querySelector('form#register-account-form');
    var btnGeneratePassword = document.querySelector('#generate-password');
    var checkPrivacyText = document.querySelector('#privacy-text');
    var checkPrivacyTextWarn = document.querySelector('.checkbox-privacy-text-warning');
    emailAddress.addEventListener('input', function (e) {
      if (emailValidation(emailAddress.value)) {
        emaiWarningInput.classList.remove("active");
        emailAddress.style.border = '';
      } else {
        emaiWarningInput.classList.add("active");
      }
    });
    _password.addEventListener('input', function (e) {
      if (userPassValidation(_password.value)) {
        passRegSpanRegex.classList.remove("active");
        _password.style.border = '';
      } else {
        passRegSpanRegex.classList.add("active");
      }
    });
    btnGeneratePassword.addEventListener('click', function (e) {
      e.preventDefault();
      // genpass(12, 4, '#password_register', '')
      _password.value = _gen_pass_js__WEBPACK_IMPORTED_MODULE_0__.genPassword.get(12, 1, 1, 1);
      passRegSpanRegex.classList.remove("active");
      _password.style.border = '';
    });
    form.querySelectorAll('input').forEach(function (item) {
      item.addEventListener('input', function (e) {
        item.style.border = '';
      });
    });
    registerAccountSubmit.addEventListener('click', function (e) {
      e.preventDefault();
      var formInputs = document.querySelectorAll('form#register-account-form input[required]');
      var formInputsAll = document.querySelectorAll('form#register-account-form input');
      var emailAddresVal = document.querySelector('#email_register');
      var passwordVal = document.querySelector('#password_register');

      // console.dir(formValidate(formInputs, emailAddresVal, passwordVal));

      if (formValidate(formInputs, emailAddresVal, passwordVal) == true) {
        // console.dir('Yes');

        var formData = new FormData(form);
        formData.append('action', 'press_net_register');
        // console.dir(Array.from(formData));

        jQuery(document).ready(function ($) {
          $.ajax({
            type: 'POST',
            url: '/wp-admin/admin-ajax.php',
            processData: false,
            contentType: false,
            data: formData,
            success: function success(data) {
              console.dir(data);
              var data_fin = JSON.parse(data);
              if (data_fin["class"] == 'errors') {
                for (var key in data_fin) {
                  if (key !== 'class') {
                    // console.log(key + ': ' + data_fin[key]);
                    document.querySelector('.notif-custom-reg').insertAdjacentHTML('beforeend', "\n                                        <div class=\"notification closeable error\">\n                                        <p>".concat(data_fin[key], "</p>\n                                        <a class=\"close\" href=\"#\"></a>\n                                        </div>"));
                  }
                }
                var aCloseNotifys = document.querySelectorAll('.notif-custom-reg .notification a.close');
                setTimeout(function () {
                  var notifys = document.querySelectorAll('.notif-custom-reg .notification');
                  var _iterator = _createForOfIteratorHelper(notifys),
                    _step;
                  try {
                    for (_iterator.s(); !(_step = _iterator.n()).done;) {
                      var elem = _step.value;
                      elem.remove();
                    }
                  } catch (err) {
                    _iterator.e(err);
                  } finally {
                    _iterator.f();
                  }
                  location.reload();
                }, 10000);
              } else {
                welcomeText.classList.add("active");
                form.reset();
                formCheckboxFalse(form);
                // form.style.display = 'none'
              }
            },

            error: function error() {
              console.log('Ошибка отправки.');
            }
          });
        });
      } else {
        console.dir('No');
      }
      if (checkPrivacyText.checked) {
        // if (password.value === passwordRepeat.value ) {
        //     let emailAddressVal = emailAddress.value
        //     let passwordVal = password.value
        //     let nonceVal = nonce.value

        // } else {
        //     passRegRepSpanRegex.style.display = 'block'
        // }
      } else {
        checkPrivacyTextWarn.style.display = 'block';
      }
    });
  }
};
regUser();
function formValidate(formInputs, emailInput, passInput) {
  var inputsValue = 0;
  formInputs.forEach(function (input) {
    if (input.type !== 'checkbox') {
      if (input.value) {
        ++inputsValue;
      } else {
        input.style.border = '1px solid var(--orange-color)';
        if (input.id == 'company_id' || input.id == 'media_id') {
          console.dir(input);
          input.style.border = '';
          input.previousElementSibling.classList.add("active");
        }
      }
    }
    if (input.id == 'privacy-text') {
      if (input.checked == true) {
        input.nextElementSibling.classList.remove("active");
        ++inputsValue;
      } else {
        input.nextElementSibling.classList.add("active");
      }
    }
  });
  // console.dir(formInputs.length);
  // console.dir(inputsValue);
  if (formInputs.length == inputsValue && emailValidation(emailInput.value) && userPassValidation(passInput.value)) {
    return true;
  } else {
    return false;
  }
}
function formCheckboxFalse(form) {
  var formInputs = form.querySelectorAll('input[type="checkbox"]');
  var formActive = form.querySelectorAll('.checkbox .active');
  formInputs.forEach(function (input) {
    input.checked = false;
  });
  formActive.forEach(function (item) {
    item.classList.remove("active");
  });
  form.querySelector('.new-company-form').classList.remove("active");
  form.querySelector('.new-media-form').classList.remove("active");
  form.querySelectorAll('.field-group').forEach(function (item) {
    item.style.opacity = '';
    if (item.children[1].children[0]) {
      item.children[1].children[0].style.pointerEvents = '';
    }
  });
}
function getParameter(key) {
  var address = window.location.search;
  var parameterList = new URLSearchParams(address);
  return parameterList.get(key);
}
function emailValidation(value) {
  var txt = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  return txt.test(value);
}
function userNicValidation(value) {
  var txt = /^[a-zA-Z0-9_-\s]{3,15}$/;
  return txt.test(value);
}
function userFullNicValidation(value) {
  var txt = /^[a-zA-Zа-яА-Я0-9_-\s]{3,60}$/;
  return txt.test(value);
}
function userPassValidation(value) {
  // ((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20})
  var txt = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,16}$/;
  return txt.test(value);
}
function genpass(passlen, passwstrength, elem, elemRepeat) {
  var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
  var numbers_chars = '0123456789';
  var special_chars = '!@#$%^&*()';
  var extra_special_chars = '[]{}<>~+=/?|'; // '-_[]{}<>~`+=,.;:/?|'

  xchars = chars;
  if (passwstrength == 2) xchars += special_chars;
  if (passwstrength == 3) xchars += special_chars + extra_special_chars;
  if (passwstrength == 4) xchars += special_chars + numbers_chars + extra_special_chars;
  password = '';
  for (i = 0; i < passlen; i++) password += xchars.charAt(Math.floor(Math.random() * xchars.length));
  var parts = password.match(/.{1,3}/g);
  new_password = parts.join("-");
  document.querySelector(elem).value = new_password;
  if (elemRepeat) {
    document.querySelector(elemRepeat).value = new_password;
  }
}

/***/ }),

/***/ "./src/js/author.js":
/*!**************************!*\
  !*** ./src/js/author.js ***!
  \**************************/
/***/ (() => {

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var userAvatar = function userAvatar() {
  var formAvatarUpload = document.querySelector('form#user_avatar_upload');
  if (formAvatarUpload) {
    var inputImageUpload = document.querySelector('#my_image_upload');
    inputImageUpload.addEventListener('change', function (e) {
      e.preventDefault();
      var formData = new FormData(formAvatarUpload);
      formData.append('action', 'press_net_avatar_upload');
      jQuery(document).ready(function ($) {
        $.ajax({
          type: 'POST',
          url: '/wp-admin/admin-ajax.php',
          processData: false,
          contentType: false,
          data: formData,
          success: function success(data) {
            console.dir(data);
            // let data_fin = JSON.parse(data)
            // console.dir(data);
          },

          error: function error() {
            console.log('Ошибка отправки.');
          }
        });
      });
    });
  }
};
userAvatar();
var userAvatarDelete = function userAvatarDelete() {
  var buttonImageDelete = document.querySelector('#button-image-delete');
  if (buttonImageDelete) {
    var formAvatarUpload = document.querySelector('form#user_avatar_upload');
    buttonImageDelete.addEventListener('click', function (e) {
      e.preventDefault();
      var formData = new FormData(formAvatarUpload);
      formData.append('action', 'press_net_avatar_delete');
      jQuery(document).ready(function ($) {
        $.ajax({
          type: 'POST',
          url: '/wp-admin/admin-ajax.php',
          processData: false,
          contentType: false,
          data: formData,
          success: function success(data) {
            console.dir(data);
            document.querySelector('#result').src = '/defolt-no-user.svg';
            // let data_fin = JSON.parse(data)
            // console.dir(data);
          },

          error: function error() {
            console.log('Ошибка отправки.');
          }
        });
      });
    });
  }
};
userAvatarDelete();
var userProfileNav = function userProfileNav() {
  var profileNav = document.querySelector('#profile-nav');
  if (profileNav) {
    var profileNavLinks = document.querySelectorAll('#profile-nav a');
    var tabs = document.querySelectorAll('.author-wrap__main-your-office__content__tab');
    profileNavLinks.forEach(function (link) {
      link.addEventListener('click', function (e) {
        e.preventDefault();
        var atrHref = link.dataset.tab;
        var params = '?tab=' + atrHref;
        updateURL(params);
        var tabActyve = document.querySelector('.author-wrap__main-your-office__content__tab#' + atrHref);
        userProfileLincs(profileNavLinks, link, '');
        userProfileTab(tabs, tabActyve);
        tabs.forEach(function (tab) {
          if (tab.id !== 'about') {
            var tabsChildActive = tab.querySelectorAll('.active');
            tabsChildActive.forEach(function (item) {
              item.classList.remove("active");
            });
          }
        });
      });
    });
    var params = new URL(document.location).searchParams;
    var paramTab = params.get('tab');
    if (paramTab) {
      var tabActyveLoc = document.querySelector('.author-wrap__main-your-office__content__tab#' + paramTab);
      userProfileLincs(profileNavLinks, '', paramTab);
      userProfileTab(tabs, tabActyveLoc);
    }
  }
};
userProfileNav();
var userProfileEdit = function userProfileEdit() {
  var authorLkSubmit = document.querySelector('#author-lk-submit');
  if (authorLkSubmit) {
    var formAboutFields = document.querySelector('form.about-fields');
    var formInputs = formAboutFields.querySelectorAll('input[required]');
    var formInputsCheck = formAboutFields.querySelectorAll('input[type="checkbox"]');
    var formTextarea = formAboutFields.querySelector('textarea');
    formInputs.forEach(function (input) {
      input.addEventListener('input', function (e) {
        if (input.value.length > 0) {
          authorLkSubmit.style.pointerEvents = 'auto';
        }
      });
    });
    formTextarea.addEventListener('input', function (e) {
      if (formTextarea.value.length > 0) {
        authorLkSubmit.style.pointerEvents = 'auto';
      }
    });
    formInputsCheck.forEach(function (inputCheck) {
      inputCheck.addEventListener('change', function (e) {
        authorLkSubmit.style.pointerEvents = 'auto';
      });
    });
    authorLkSubmit.addEventListener('click', function (e) {
      e.preventDefault();
      var inputsNo = 0;
      formInputs.forEach(function (input) {
        if (input.value.length > 0) {
          input.parentElement.nextElementSibling.classList.remove("active");
        } else {
          input.parentElement.nextElementSibling.classList.add("active");
          ++inputsNo;
        }
      });
      if (inputsNo == 0) {
        console.dir(formAboutFields);
        var formData = new FormData(formAboutFields);
        formData.append('action', 'user_profile_edits');
        jQuery(document).ready(function ($) {
          $.ajax({
            type: 'POST',
            url: '/wp-admin/admin-ajax.php',
            processData: false,
            contentType: false,
            data: formData,
            success: function success(data) {
              console.dir(data);
              var data_fin = JSON.parse(data);
              if (data_fin["class"] == 'errors') {
                for (var key in data_fin) {
                  if (key !== 'class') {
                    console.log(key + ': ' + data_fin[key]);
                    document.querySelector('.notif-custom-reg').insertAdjacentHTML('beforeend', "\n                                        <div class=\"notification closeable error\">\n                                        <p>".concat(data_fin[key], "</p>\n                                        <a class=\"close\" href=\"#\"></a>\n                                        </div>"));
                    if (key == 'types_error') {
                      document.querySelector('#types_error').classList.add("active");
                    } else {
                      document.querySelector('#types_error').classList.remove("active");
                    }
                  }
                }
                // setTimeout( () => {
                //     let notifys = document.querySelectorAll('.notif-custom-reg .notification')
                //     for ( const elem of notifys ) {
                //         elem.remove()
                //     }
                //     location.reload();
                // }, 5000);
              } else {
                console.dir(data_fin["class"]);
                document.querySelector('.notif-custom-reg').insertAdjacentHTML('beforeend', "\n                                <div class=\"notification closeable success\">\n                                <p>".concat(data_fin['success-end'], "</p>\n                                <a class=\"close\" href=\"#\"></a>\n                                </div>"));
                setTimeout(function () {
                  var notifys = document.querySelectorAll('.notif-custom-reg .notification');
                  var _iterator = _createForOfIteratorHelper(notifys),
                    _step;
                  try {
                    for (_iterator.s(); !(_step = _iterator.n()).done;) {
                      var elem = _step.value;
                      elem.remove();
                    }
                  } catch (err) {
                    _iterator.e(err);
                  } finally {
                    _iterator.f();
                  }
                  location.reload();
                }, 5000);
                // welcomeText.classList.add("active")
                // form.style.display = 'none'
                // regEnd.style.display = 'block'
              }
            },

            error: function error() {
              console.log('Ошибка отправки.');
            }
          });
        });
      } else {
        console.log(inputsNo);
      }
    });
  }
};
userProfileEdit();
var userProfileThemes = function userProfileThemes() {
  var btnAddThemes = document.querySelectorAll('.user-themes__add-item');
  if (btnAddThemes.length > 0) {
    btnAddThemes.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        btn.previousElementSibling.classList.toggle('active');
        btn.previousElementSibling.children[0].focus();
      });
    });
  }
  var inputThemes = document.querySelectorAll('input#themes');
  if (inputThemes.length > 0) {
    var divThemes = document.querySelector('.user-themes__items');
    inputThemes.forEach(function (input) {
      input.addEventListener('input', function (e) {
        if (input.value.length > 0) {
          input.nextElementSibling.classList.add('active');
        } else {
          input.nextElementSibling.classList.remove('active');
        }
      });
      input.nextElementSibling.addEventListener('click', function (e) {
        userAddThemes(input, input.parentElement.previousElementSibling);
        userEditThemes(input.parentElement.nextElementSibling.nextElementSibling.nextElementSibling);
      });
    });
  }
};
userProfileThemes();
function userDeleteThemes(divThemes) {
  var btnDeleteThemes = document.querySelectorAll('.user-themes__items__item svg');
  if (btnDeleteThemes.length > 0) {
    btnDeleteThemes.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        btn.parentElement.remove();
        userEditThemes(divThemes.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling);
        document.querySelector('#author-lk-submit').style.pointerEvents = 'auto';
      });
    });
  }
}
userDeleteThemes(document.querySelector('.user-themes__items'));
function userAddThemes(input, divThemes) {
  divThemes.insertAdjacentHTML('beforeend', "<div class=\"user-themes__items__item\">\n            <span>".concat(input.value, "</span>\n            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <title>Delete a theme</title>\n                <path d=\"M18 6L6 18\" stroke=\"#2F54EB\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n                <path d=\"M6 6L18 18\" stroke=\"#2F54EB\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n            </svg>\n        </div>"));
  input.value = '';
  userDeleteThemes(divThemes);
}
function userEditThemes(elem) {
  var spanThemes = document.querySelectorAll('.user-themes__items__item span');
  if (spanThemes.length > 0) {
    var inputThemesEdit = document.querySelector('input#user_themes_edit');
    var allThemes = [];
    spanThemes.forEach(function (span) {
      allThemes.push(span.innerText);
    });
    elem.value = allThemes.join(',');
    document.querySelector('#author-lk-submit').style.pointerEvents = 'auto';
  }
}
var parentUserDelete = function parentUserDelete() {
  var btnDeleteParentUser = document.querySelectorAll('#btn-delete-parent-user');
  if (btnDeleteParentUser.length > 0) {
    btnDeleteParentUser.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        var formAuthorNonce = document.querySelector('form#author_nonce');
        var formNonce = new FormData(formAuthorNonce);
        formNonce.append('action', 'parent_user_delete');
        formNonce.append('user_id', btn.dataset.user);
        jQuery(document).ready(function ($) {
          $.ajax({
            type: 'POST',
            url: '/wp-admin/admin-ajax.php',
            processData: false,
            contentType: false,
            data: formNonce,
            success: function success(data) {
              console.dir(data);
              btn.parentElement.remove();
            },
            error: function error() {
              console.log('Ошибка отправки.');
            }
          });
        });
      });
    });
  }
};
parentUserDelete();
function userProfileTab(tabs, tabActyve) {
  tabs.forEach(function (tab) {
    tab.classList.remove('active');
  });
  if (tabActyve) {
    tabActyve.classList.add('active');
  }
}
function userProfileLincs(links, linkActyve, tab) {
  if (tab) {
    if (links) {
      links.forEach(function (link) {
        link.classList.remove('active');
      });
    }
    document.querySelector('a[data-tab="' + tab + '"]').classList.add('active');
    // console.log(document.querySelector('#profile-nav a[data-tab="'+tab+'"]'));
  } else {
    if (links) {
      links.forEach(function (link) {
        link.classList.remove('active');
      });
    }
    if (linkActyve) {
      linkActyve.classList.add('active');
    }
  }
}
function updateURL(params) {
  if (history.pushState) {
    var baseUrl = window.location.protocol + "//" + window.location.host + window.location.pathname;
    var newUrl = baseUrl + params;
    history.pushState(null, null, newUrl);
  } else {
    console.warn('History API not supported');
  }
}

/***/ }),

/***/ "./src/js/filtr.js":
/*!*************************!*\
  !*** ./src/js/filtr.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _users_actions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./users-actions.js */ "./src/js/users-actions.js");
/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main.js */ "./src/js/main.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }


var filtr = function filtr() {
  var archiveFilter = document.querySelector('.archive-filter');
  if (archiveFilter) {
    var optionsCatInputs = document.querySelectorAll('.filtr-options.categories input');
    var optionsTypeInputs = document.querySelectorAll('.filtr-options.type input');
    var optionsSortInputs = document.querySelectorAll('.sorting-requests__options input');
    var buttonFavorites = document.querySelector('.archive-filter__item button#favorites');
    var optionsMediaCatInputs = document.querySelectorAll('.filtr-options.media-categories input');
    var formAll = document.querySelector('#form-all');
    var taxs = null;
    var types = null;
    if (optionsTypeInputs.length > 0) {
      optionsTypeInputs.forEach(function (input) {
        input.addEventListener('change', function () {
          var taxs = [];
          var types = [];
          var formData = new FormData(formAll);
          formData.append('action', 'filtr_requests');
          catInputsCheckType(types);
          formData.append('request_type', types.join(','));
          catInputsCheck(taxs);
          if (taxs) {
            formData.append('categories', taxs.join(','));
          }
          filtrAjaxData(formData, 'requests');
        });
      });
    }
    if (optionsCatInputs.length > 0) {
      optionsCatInputs.forEach(function (input) {
        input.addEventListener('change', function () {
          var taxs = [];
          var types = [];
          var formData = new FormData(formAll);
          formData.append('action', 'filtr_requests');
          if (input.dataset.child == 1) {
            formData.append('tax_parent', 1);
          }
          filtrOptionsCheckHand(input);
          catInputsCheck(taxs);
          if (taxs) {
            formData.append('categories', taxs.join(','));
          }
          catInputsCheckType(types);
          if (types) {
            formData.append('request_type', types.join(','));
          }
          filtrAjaxData(formData, 'requests');
        });
      });
    }
    if (optionsSortInputs.length > 0) {
      optionsSortInputs.forEach(function (input) {
        input.addEventListener('change', function () {
          sortInputsCheck(optionsSortInputs, this);
          var taxs = [];
          var types = [];
          var formData = new FormData(formAll);
          formData.append('action', 'filtr_requests');
          formData.append('sort', input.value);
          catInputsCheck(taxs);
          if (taxs) {
            formData.append('categories', taxs.join(','));
          }
          catInputsCheckType(types);
          if (types) {
            formData.append('request_type', types.join(','));
          }
          filtrAjaxData(formData, 'requests');
        });
      });
    }
    if (buttonFavorites) {
      buttonFavorites.addEventListener('click', function () {
        buttonFavorites.classList.toggle('active');
        var taxs = [];
        var types = [];
        var formData = new FormData(formAll);
        formData.append('action', 'filtr_requests');
        if (buttonFavorites.classList.contains('active')) {
          formData.append('favorites', 1);
        }
        catInputsCheck(taxs);
        if (taxs) {
          formData.append('categories', taxs.join(','));
        }
        catInputsCheckType(types);
        if (types) {
          formData.append('request_type', types.join(','));
        }
        filtrAjaxData(formData, 'requests');
      });
    }
    if (optionsMediaCatInputs.length > 0) {
      optionsMediaCatInputs.forEach(function (input) {
        input.addEventListener('change', function () {
          var formData = new FormData(formAll);
          formData.append('action', 'filtr_requests');
          catInputsCheckType(types);
          if (input.value !== 'all') {
            formData.append('media_categories', input.value);
          }
          filtrAjaxData(formData, 'mass-media');
        });
      });
    }
  }
};
filtr();
function filtrOptionsBtns(btn) {
  var filtrBtn = document.querySelector(btn);
  if (filtrBtn) {
    filtrBtn.addEventListener('click', function () {
      filtrBtn.parentElement.children[1].classList.toggle('active');
    });
    document.addEventListener('click', function (e) {
      var sBtn = e.composedPath().includes(filtrBtn);
      var sOptions = e.composedPath().includes(filtrBtn.parentElement.children[1]);
      if (!sBtn && !sOptions) {
        filtrBtn.parentElement.children[1].classList.remove('active');
      }
    });
    document.addEventListener('keyup', function (e) {
      var key = e.keyCode;
      if (key == 27) {
        if (filtrBtn) {
          filtrBtn.parentElement.children[1].classList.remove('active');
        }
      }
      ;
    }, false);
  }
}
filtrOptionsBtns('#categories');
filtrOptionsBtns('#type');
function sortActionsBtns(btn) {
  var sortingBtn = document.querySelector(btn);
  if (sortingBtn) {
    sortingBtn.addEventListener('click', function () {
      sortingBtn.children[1].classList.toggle('active');
    });
    document.addEventListener('click', function (e) {
      var sBtn = e.composedPath().includes(sortingBtn);
      var sOptions = e.composedPath().includes(sortingBtn.children[1]);
      if (!sBtn && !sOptions) {
        sortingBtn.children[1].classList.remove('active');
      }
    });
    document.addEventListener('keyup', function (e) {
      var key = e.keyCode;
      if (key == 27) {
        if (sortingBtn) {
          sortingBtn.children[1].classList.remove('active');
        }
      }
      ;
    }, false);
  }
}
sortActionsBtns('.sorting-requests');
var filtrOptionsExpandClick = function filtrOptionsExpandClick() {
  var expandItems = document.querySelectorAll('.filtr-options__expand');
  if (expandItems.length > 0) {
    expandItems.forEach(function (item) {
      item.addEventListener('click', function (e) {
        item.children[0].classList.toggle('active');
        item.nextElementSibling.classList.toggle('active');
        item.previousElementSibling.classList.toggle('active');
      });
    });
  }
};
filtrOptionsExpandClick();
function filtrOptionsCheckHandle() {
  var parentOptions = document.querySelectorAll('.filtr-options__parent');
  var childrenOptions = document.querySelectorAll('.filtr-options__children');
  if (parentOptions.length > 0) {
    parentOptions.forEach(function (option) {
      option.children[0].addEventListener('change', function (e) {
        var parent = option.dataset.parent;
        if (parent) {
          var child = document.querySelector('.filtr-options__children[data-parent="' + parent + '"]');
          if (option.children[0].checked == true) {
            inputsChecked(child.children, 1);
          } else {
            inputsChecked(child.children, 0);
          }
        }
      });
    });
  }
}
// filtrOptionsCheckHandle()

function filtrOptionsCheckHand(option) {
  var parent = option.parentElement.dataset.parent;
  if (parent) {
    var child = document.querySelector('.filtr-options__children[data-parent="' + parent + '"]');
    if (option.checked == true) {
      inputsChecked(child.children, 1);
    } else {
      inputsChecked(child.children, 0);
    }
  }
}
function inputsChecked(inputs, check) {
  var _iterator = _createForOfIteratorHelper(inputs),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var item = _step.value;
      if (check == 1) {
        item.children[0].checked = true;
      } else if (check == 0) {
        item.children[0].checked = false;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
function filtrAjaxData(formData, postType) {
  (function ($) {
    $.ajax({
      type: 'POST',
      url: '/wp-admin/admin-ajax.php',
      processData: false,
      contentType: false,
      data: formData,
      success: function success(data) {
        // console.dir(data);
        var data_json = JSON.parse(data);
        filtrAjaxRender(data_json, postType);
      }
    });
  })(jQuery);
}
function catInputsCheck(taxs) {
  var optionsCatInputs = document.querySelectorAll('.filtr-options.categories input');
  optionsCatInputs.forEach(function (input) {
    if (input.checked == true) {
      taxs.push(input.value);
    }
  });
}
function catInputsCheckType(types) {
  var optionsCatInputs = document.querySelectorAll('.filtr-options.type input');
  optionsCatInputs.forEach(function (input) {
    if (input.checked == true) {
      types.push(input.value);
    }
  });
}
function sortInputsCheck(inputs, inputAct) {
  inputs.forEach(function (input) {
    if (input != inputAct) {
      input.checked == false;
    }
  });
}
function filtrAjaxRender(data, postType) {
  var archivePosts = document.querySelector('.archive-posts');
  // console.log(JSON.parse(data.posts));
  // console.log(JSON.parse(data.posts_query)); Math.ceil(data.posts_query.length/10)

  var postsObj = JSON.parse(data.posts);
  archivePosts.innerHTML = '';
  if (postType == 'requests') {
    postsObj.forEach(function (post) {
      archivePosts.insertAdjacentHTML("beforeend", "<div class=\"archive-posts__item\">\n                    <div class=\"archive-posts__item__logo\">\n                        <svg width=\"32\" height=\"32\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <rect width=\"60\" height=\"60\" fill=\"white\"/>\n                            <circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"#EFF4FA\"/>\n                            <path d=\"M22.2724 29.6914H16.169V37.9819C16.169 40.169 17.9491 42 20.1871 42H38.294C41.1422 42 43.431 39.7112 43.431 36.8629V18.4H22.2724V29.6914ZM18.0509 38.0328V31.5733H22.2724V37.9819C22.2724 39.1517 21.306 40.0672 20.1871 40.0672C19.0681 40.0672 18.0509 39.2026 18.0509 38.0328ZM24.1543 20.2819H41.4983V36.8629C41.4983 38.6431 40.0233 40.1181 38.2431 40.1181H23.544C23.9509 39.5078 24.1543 38.7957 24.1543 38.0328V30.6578V29.6914V20.2819Z\" fill=\"#BDC2C9\"/>\n                            <path d=\"M28.5285 25.3681H33.0043C33.5129 25.3681 33.9707 24.9612 33.9707 24.4017C33.9707 23.8422 33.5129 23.4862 33.0043 23.4862H28.5285C28.0198 23.4862 27.5621 23.8931 27.5621 24.4526C27.5621 25.0121 27.969 25.3681 28.5285 25.3681Z\" fill=\"#BDC2C9\"/>\n                            <path d=\"M28.5285 29.0302H37.2767C37.7854 29.0302 38.2431 28.6233 38.2431 28.0638C38.2431 27.5043 37.8362 27.0974 37.2767 27.0974H28.5285C28.0198 27.0974 27.5621 27.5043 27.5621 28.0638C27.5621 28.6233 27.969 29.0302 28.5285 29.0302Z\" fill=\"#BDC2C9\"/>\n                            <path d=\"M28.5285 32.6922H37.2767C37.7854 32.6922 38.2431 32.2853 38.2431 31.7259C38.2431 31.1664 37.8362 30.7595 37.2767 30.7595H28.5285C28.0198 30.7595 27.5621 31.1664 27.5621 31.7259C27.5621 32.2853 27.969 32.6922 28.5285 32.6922Z\" fill=\"#BDC2C9\"/>\n                            <path d=\"M28.5285 36.3543H37.2767C37.7854 36.3543 38.2431 35.9474 38.2431 35.3879C38.2431 34.8284 37.8362 34.4216 37.2767 34.4216H28.5285C28.0198 34.4216 27.5621 34.8284 27.5621 35.3879C27.5621 35.9474 27.969 36.3543 28.5285 36.3543Z\" fill=\"#BDC2C9\"/>\n                        </svg>\n                    </div>\n                    <div class=\"archive-posts__item__title requests\">\n                        <span class=\"request-title\">\n                            <a href=\"".concat(post.url, "\" class=\"archive-posts__item__link\" title=\"Go to ").concat(post.title, "\">").concat(post.title, "</a>\n                        </span>\n                        <div class=\"requests-media-meta\">\n                            <a href=\"").concat(post.media_parent_url, "\" title=\"Go to ").concat(post.media_parent_title, "\">").concat(post.media_parent_title, ", ").concat(post.media_parent_city, "</a>\n                            <span class=\"requests-media-meta__date\">").concat(post.post_date, "</span>\n                        </div>\n                    </div>\n                    <div class=\"archive-posts__item__meta requests\">\n                        <span class=\"archive-posts__item__meta__deadline\" title=\"Time to deadline\">\n                            ").concat(post.deadline, "\n                        </span>\n                    </div>\n                    <div class=\"archive-posts__item__buttons\">\n                        <button type=\"button\" name=\"button\" title=\"").concat(post.meta_btn_subs.title, "\"\n                            class=\"js-btn-subscribe").concat(post.meta_btn_subs.btn_class, "\"\n                            data-post=\"").concat(post.id, "\" data-post-type=\"subscribe_request\" data-subscr=\"archive\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M5 20a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM4 4a16 16 0 0 1 16 16M4 11a9 9 0 0 1 9 9\"></path>\n                            </svg>\n                        </button>\n                        <button type=\"button\" name=\"button\" title=\"").concat(post.meta_btn_fav.title, "\"\n                            class=\"js-btn-favorites").concat(post.meta_btn_fav.btn_class, "\"\n                            data-post=\"").concat(post.id, "\" data-post-type=\"favorites_request\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M9 4h6a2 2 0 0 1 2 2v14l-5-3-5 3V6a2 2 0 0 1 2-2Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n                            </svg>\n                        </button>\n                        <button type=\"button\" name=\"button\" title=\"").concat(post.meta_btn_read.title, "\"\n                            class=\"mark-read").concat(post.meta_btn_read.btn_class, "\" data-post=\"").concat(post.id, "\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"m5 12 5 5L20 7\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n                            </svg>\n                        </button>\n                    </div>\n                </div>"));
    });
    (0,_users_actions_js__WEBPACK_IMPORTED_MODULE_0__.subscribePost)();
    (0,_users_actions_js__WEBPACK_IMPORTED_MODULE_0__.markAllReadActions)();
    (0,_users_actions_js__WEBPACK_IMPORTED_MODULE_0__.favoritesPost)();
  }
  if (postType == 'mass-media') {
    var logo = "<svg width=\"32\" height=\"32\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"60\" height=\"60\" fill=\"white\"></rect>\n            <circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"#EFF4FA\"></circle>\n            <path d=\"M22.2724 29.6914H16.169V37.9819C16.169 40.169 17.9491 42 20.1871 42H38.294C41.1422 42 43.431 39.7112 43.431 36.8629V18.4H22.2724V29.6914ZM18.0509 38.0328V31.5733H22.2724V37.9819C22.2724 39.1517 21.306 40.0672 20.1871 40.0672C19.0681 40.0672 18.0509 39.2026 18.0509 38.0328ZM24.1543 20.2819H41.4983V36.8629C41.4983 38.6431 40.0233 40.1181 38.2431 40.1181H23.544C23.9509 39.5078 24.1543 38.7957 24.1543 38.0328V30.6578V29.6914V20.2819Z\" fill=\"#BDC2C9\"></path>\n            <path d=\"M28.5285 25.3681H33.0043C33.5129 25.3681 33.9707 24.9612 33.9707 24.4017C33.9707 23.8422 33.5129 23.4862 33.0043 23.4862H28.5285C28.0198 23.4862 27.5621 23.8931 27.5621 24.4526C27.5621 25.0121 27.969 25.3681 28.5285 25.3681Z\" fill=\"#BDC2C9\"></path>\n            <path d=\"M28.5285 29.0302H37.2767C37.7854 29.0302 38.2431 28.6233 38.2431 28.0638C38.2431 27.5043 37.8362 27.0974 37.2767 27.0974H28.5285C28.0198 27.0974 27.5621 27.5043 27.5621 28.0638C27.5621 28.6233 27.969 29.0302 28.5285 29.0302Z\" fill=\"#BDC2C9\"></path>\n            <path d=\"M28.5285 32.6922H37.2767C37.7854 32.6922 38.2431 32.2853 38.2431 31.7259C38.2431 31.1664 37.8362 30.7595 37.2767 30.7595H28.5285C28.0198 30.7595 27.5621 31.1664 27.5621 31.7259C27.5621 32.2853 27.969 32.6922 28.5285 32.6922Z\" fill=\"#BDC2C9\"></path>\n            <path d=\"M28.5285 36.3543H37.2767C37.7854 36.3543 38.2431 35.9474 38.2431 35.3879C38.2431 34.8284 37.8362 34.4216 37.2767 34.4216H28.5285C28.0198 34.4216 27.5621 34.8284 27.5621 35.3879C27.5621 35.9474 27.969 36.3543 28.5285 36.3543Z\" fill=\"#BDC2C9\"></path>\n        </svg>";
    var logoImg = '';
    postsObj.forEach(function (post) {
      if (post.thumbnail_url) {
        logoImg = "<img src=\"".concat(post.thumbnail_url, "\" alt=\"\">");
      } else {
        logoImg = "<img src=\"/wp-content/themes/press-net/img/icons/media-logo-no.svg\" alt=\"\">";
      }
      archivePosts.insertAdjacentHTML("beforeend", "<div class=\"archive-posts__item\">\n                    <div class=\"archive-posts__item__logo\">\n                        ".concat(logoImg, "\n                    </div>\n                    <div class=\"archive-posts__item__title\">\n                        <a href=\"").concat(post.url, "\" class=\"archive-posts__item__link\" title=\"Go to ").concat(post.title, "\">").concat(post.title, "</a>\n                    </div>\n                    <div class=\"archive-posts__item__meta\">\n                        <span>").concat(post.terms, ".</span>\n                        <span>").concat(post.city, "</span>\n                    </div>\n                    <div class=\"archive-posts__item__buttons\">\n                        <button type=\"button\" name=\"button\" class=\"js-assign-work js-open-modal\"\n                            title=\"Order advertising in this media\"\n                            data-modal=\"assign-work-journalists\" data-overlay=\"all\" data-post=\"").concat(post.id, "\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                <path d=\"M12 21a9 9 0 1 0 0-18 9 9 0 0 0 0 18ZM9 12h6M12 9v6\"></path>\n                            </svg>\n                        </button>\n                        <button type=\"button\" name=\"button\" title=\"").concat(post.meta_btn_subs.title, "\"\n                            class=\"js-btn-subscribe").concat(post.meta_btn_subs.btn_class, "\"\n                            data-post=\"").concat(post.id, "\" data-post-type=\"subscribe_media\" data-subscr=\"archive\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M5 20a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM4 4a16 16 0 0 1 16 16M4 11a9 9 0 0 1 9 9\"></path>\n                            </svg>\n                        </button>\n                    </div>\n                </div>"));
    });
    (0,_users_actions_js__WEBPACK_IMPORTED_MODULE_0__.subscribePost)();
    (0,_users_actions_js__WEBPACK_IMPORTED_MODULE_0__.assignWork)();
    (0,_main_js__WEBPACK_IMPORTED_MODULE_1__.modal)();
  }
}

/***/ }),

/***/ "./src/js/form-input.js":
/*!******************************!*\
  !*** ./src/js/form-input.js ***!
  \******************************/
/***/ (() => {

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var checkboxLabelCheck = function checkboxLabelCheck() {
  var checkboxInputs = document.querySelectorAll('form .checkbox input');
  if (checkboxInputs.length > 0) {
    checkboxInputs.forEach(function (input) {
      input.addEventListener('change', function () {
        if (input.checked == true) {
          input.previousElementSibling.children[0].classList.add('active');
          input.previousElementSibling.children[0].children[0].classList.add('active');
          if (input.id == 'new_company' || input.id == 'new_media') {
            input.parentElement.parentElement.nextElementSibling.classList.add('active');
            input.parentElement.previousElementSibling.style.opacity = 0.2;
            setRequired(input.parentElement.parentElement.nextElementSibling, input.parentElement.previousElementSibling);
          }
        } else {
          input.previousElementSibling.children[0].classList.remove('active');
          input.previousElementSibling.children[0].children[0].classList.remove('active');
          if (input.id == 'new_company' || input.id == 'new_media') {
            input.parentElement.parentElement.nextElementSibling.classList.remove('active');
            input.parentElement.previousElementSibling.style.opacity = '';
            removeRequired(input.parentElement.parentElement.nextElementSibling, input.parentElement.previousElementSibling);
          }
        }
      });
    });
  }
};
checkboxLabelCheck();
var passwordVision = function passwordVision() {
  var inputWithIcon = document.querySelectorAll('form .input-with-icon');
  if (inputWithIcon.length > 0) {
    var icons = document.querySelectorAll('form .input-with-icon svg');
    var input = document.querySelector('form .input-with-icon input');
    icons.forEach(function (icon) {
      icon.addEventListener('click', function () {
        if (icon.classList.contains('is-title')) {
          if (icon.parentElement.children[1].type == 'password') {
            icon.parentElement.children[1].type = 'text';
          } else {
            icon.parentElement.children[1].type = 'password';
          }
          icon.parentElement.children[2].classList.toggle('active');
          icon.parentElement.children[3].classList.toggle('active');
        } else {
          if (icon.parentElement.children[0].type == 'password') {
            icon.parentElement.children[0].type = 'text';
          } else {
            icon.parentElement.children[0].type = 'password';
          }
          icon.parentElement.children[1].classList.toggle('active');
          icon.parentElement.children[2].classList.toggle('active');
        }
      });
    });
  }
};
passwordVision();
var regTypeAccountChange = function regTypeAccountChange() {
  var toggleButtons = document.querySelectorAll('button.toggle-button');
  if (toggleButtons.length > 0) {
    var inputTypeAccount = document.querySelector('input#account_type');
    var accountTypeForm = document.querySelectorAll('.account-type-form');
    var accountTypeFormInput = document.querySelectorAll('.account-type-form input');
    var accountTypeFormInputCheckbox = document.querySelectorAll('.account-type-form input[type="checkbox"]');
    toggleButtons.forEach(function (item) {
      item.addEventListener('click', function () {
        toggleButtons.forEach(function (item) {
          item.classList.remove('active');
        });
        item.classList.add('active');
        inputTypeAccount.value = item.id;
        accountTypeForm.forEach(function (item) {
          item.classList.remove('active');
        });
        accountTypeFormInput.forEach(function (item) {
          if (item.id !== 'new_company' && item.id !== 'new_media') {
            item.value = '';
          }
        });
        document.querySelector('#form-' + item.id).classList.add('active');
        accountTypeFormInputCheckbox.forEach(function (input) {
          input.checked = false;
          input.previousElementSibling.children[0].classList.remove('active');
          input.previousElementSibling.children[0].children[0].classList.remove('active');
          input.parentElement.parentElement.nextElementSibling.classList.remove('active');
          removeRequiredType(input.parentElement.parentElement.nextElementSibling, input.parentElement.previousElementSibling);
        });
      });
    });
  }
};
regTypeAccountChange();
function checkboxLabelCheckGroup(checkboxGroupClass) {
  var checkboxDiv = document.querySelectorAll('.' + checkboxGroupClass + ' input');
  if (checkboxDiv.length > 0) {
    checkboxDiv.forEach(function (item) {
      item.addEventListener('change', function () {
        if (item.checked == true) {
          item.previousElementSibling.children[0].classList.add('active');
          item.previousElementSibling.children[0].children[0].classList.add('active');
        } else {
          item.previousElementSibling.children[0].classList.remove('active');
          item.previousElementSibling.children[0].children[0].classList.remove('active');
        }
      });
    });
  }
}
checkboxLabelCheckGroup('checkbox-group');
var fieldSelectProcessing = function fieldSelectProcessing() {
  var fieldSelectAll = document.querySelectorAll('form .field-select');
  if (fieldSelectAll.length > 0) {
    fieldSelectAll.forEach(function (item) {
      item.children[0].addEventListener('focus', function () {
        item.children[1].classList.add('active');
      });
      item.children[0].addEventListener('blur', function () {
        item.children[1].classList.remove('active');
      });
      var _iterator = _createForOfIteratorHelper(item.children[1].children),
        _step;
      try {
        var _loop = function _loop() {
          var node = _step.value;
          node.addEventListener('click', function () {
            node.parentElement.previousElementSibling.value = node.innerText;
            if (node.dataset.termId) {
              node.parentElement.parentElement.nextElementSibling.nextElementSibling.nextElementSibling.value = node.dataset.termId;
            }
            if (node.dataset.postId) {
              node.parentElement.parentElement.nextElementSibling.nextElementSibling.nextElementSibling.value = node.dataset.postId;
            }
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    });
  }
};
fieldSelectProcessing();
var inputSearchIcons = function inputSearchIcons() {
  var inputSearchGroup = document.querySelectorAll('.input-search-group');
  if (inputSearchGroup.length > 0) {
    inputSearchGroup.forEach(function (item) {
      item.children[0].addEventListener('input', function () {
        if (item.children[0].value) {
          item.children[1].classList.add('active');
        } else {
          item.children[1].classList.remove('active');
        }
      });
      item.children[1].addEventListener('click', function () {
        item.children[0].value = '';
        item.children[1].classList.remove('active');
      });
    });
  }
};
inputSearchIcons();
function setRequired(inputsDivForm, inputsDivName) {
  var inputsForm = inputsDivForm.querySelectorAll('input');
  inputsForm.forEach(function (input) {
    if (input.dataset.required == 'required') {
      input.setAttribute('required', 'required');
    }
  });
  var inputsName = inputsDivName.querySelectorAll('input');
  inputsName.forEach(function (input) {
    if (input.id !== 'new_company' && input.id !== 'new_media') {
      input.value = '';
    }
    input.removeAttribute('required');
    input.style.pointerEvents = 'none';
    input.style.border = '';
    if (input.parentElement.nextElementSibling.nextElementSibling) {
      input.parentElement.nextElementSibling.nextElementSibling.classList.remove("active");
    }
  });
}
function removeRequired(inputsDiv, inputsDivName) {
  var inputs = inputsDiv.querySelectorAll('input');
  inputs.forEach(function (input) {
    input.removeAttribute('required');
  });
  var inputsName = inputsDivName.querySelectorAll('input');
  inputsName.forEach(function (input) {
    if (input.id !== 'new_company' && input.id !== 'new_media') {
      input.value = '';
    }
    input.setAttribute('required', 'required');
    input.style.pointerEvents = '';
  });
}
function removeRequiredType(inputsDiv, inputsDivName) {
  var inputs = inputsDiv.querySelectorAll('input');
  inputs.forEach(function (input) {
    input.removeAttribute('required');
  });
  var inputsName = inputsDivName.querySelectorAll('input');
  inputsName.forEach(function (input) {
    if (input.id !== 'new_company' && input.id !== 'new_media') {
      input.value = '';
      input.style.pointerEvents = '';
    }
    input.removeAttribute('required');
  });
}
function mediaLogoDownload() {
  // imgResult, inputUpload
  var mediaLogoInputs = document.querySelectorAll('input[name="my_image_upload"]');
  mediaLogoInputs.forEach(function (input) {
    var reader = input.previousElementSibling.dataset.read;
    reader = new FileReader();
    reader.onload = function (e) {
      input.previousElementSibling.src = e.target.result;
    };
    input.addEventListener('change', loadImageFile);
    function loadImageFile() {
      var file = input.files[0];
      reader.readAsDataURL(file);
    }
  });

  // const logoResult = document.querySelector(imgResult)
  // const inputMediaLogo = document.querySelector(inputUpload)
  // let reader = logoResult.dataset.read
  // reader = new FileReader();
  // reader.onload = function(e) {
  //     logoResult.src = e.target.result;
  // };
  // inputMediaLogo.addEventListener('change', loadImageFile);
  // function loadImageFile() {
  //     var file = inputMediaLogo.files[0];
  //     reader.readAsDataURL(file);
  // }
}

mediaLogoDownload();

/***/ }),

/***/ "./src/js/gen-pass.js":
/*!****************************!*\
  !*** ./src/js/gen-pass.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   genPassword: () => (/* binding */ genPassword)
/* harmony export */ });
var genPassword = function () {
  return {
    get: function get(passwordLength, hasUpperLower, hasDigit, hasSpecial, skipChars, elem, elemRepeat) {
      passwordLength = passwordLength || 6;
      hasUpperLower = typeof hasUpperLower === 'undefined' ? 1 : hasUpperLower;
      hasDigit = typeof hasDigit === 'undefined' ? 1 : hasDigit;
      hasSpecial = typeof hasSpecial === 'undefined' ? 0 : hasSpecial;
      skipChars = skipChars || '0oOIl@';
      var password = '';
      var digitChars = '1234567890';
      var lowerChars = 'abcdefghijklmnopqrstuvwxyz';
      var upperChars = lowerChars.toUpperCase();
      var specialChars = '!@#$%^&*()_+';

      // exclude some characters, by default 0 o O I l @
      lowerChars = lowerChars.replace(new RegExp('[' + skipChars + ']', 'g'), '');
      upperChars = upperChars.replace(new RegExp('[' + skipChars + ']', 'g'), '');
      digitChars = digitChars.replace(new RegExp('[' + skipChars + ']', 'g'), '');
      specialChars = specialChars.replace(new RegExp('[' + skipChars + ']', 'g'), '');

      // what if everyone is excluded
      if (!lowerChars) throw 'Error, all lower chars removed!';
      if (hasUpperLower && !upperChars) throw 'Error, all upper chars removed!';
      if (hasSpecial && !specialChars) throw 'Error, all special chars removed!';
      if (hasDigit && !digitChars) throw 'Error, all digits chars removed!';

      // not enough
      var minLength = passwordLength - 1 - hasUpperLower - hasDigit - hasSpecial;
      if (minLength < 0) throw 'Error, increase password length or simple password strength!';

      // take one required character
      function randomChar(charSet) {
        Math.random();
        return charSet[Math.floor(Math.random() * charSet.length)];
      }
      password += randomChar(lowerChars);
      if (hasUpperLower) {
        password += randomChar(upperChars);
        lowerChars += upperChars;
      }
      if (hasDigit) {
        password += randomChar(digitChars);
        lowerChars += digitChars;
      }
      if (hasSpecial) {
        password += randomChar(specialChars);
        lowerChars += specialChars;
      }

      // add the remaining characters of the password
      while (passwordLength > password.length) {
        password += randomChar(lowerChars);
      }

      // mix, otherwise the first characters lUdSc
      return password.split('').sort(function () {
        return 0.5 - Math.random();
      }).join('');
    }
  };
}();


/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   modal: () => (/* binding */ modal)
/* harmony export */ });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var navScroll = function navScroll() {
  var masthead = document.getElementById('masthead');
  if (masthead) {
    var home = document.querySelector('.home');
    var body = document.querySelector('body');
    var prevScrollpos = window.pageYOffset;
    if (home) {
      if (body.getBoundingClientRect().top < 0) {
        document.querySelector('.home #masthead').classList.remove('color-home');
      } else {
        document.querySelector('.home #masthead').classList.add('color-home');
      }
    }
    window.onscroll = function () {
      var currentScrollPos = window.pageYOffset;
      if (home) {
        if (body.getBoundingClientRect().top < 0) {
          document.querySelector('.home #masthead').classList.remove('color-home');
        } else {
          document.querySelector('.home #masthead').classList.add('color-home');
        }
      }
      if (prevScrollpos > currentScrollPos) {
        masthead.style.top = '0';
      } else {
        if (prevScrollpos > 80) {
          masthead.style.top = '-80px';
        }
      }
      prevScrollpos = currentScrollPos;
    };
  }
};
navScroll();
var menuMobile = function menuMobile() {
  var mobileToggle = document.querySelector('.menu-toggle');
  if (mobileToggle) {
    var navWrapper = document.querySelector('.header-generale__navigation');
    var liItemsHasChildren = document.querySelectorAll('li.menu-item-has-children');
    var topMenuClouse = document.querySelector('.menu-clouse');
    var overlay = document.querySelector('.js-overlay-modal');
    var body = document.querySelector('body');
    mobileToggle.addEventListener('click', function () {
      overlay.classList.add('active');
      navWrapper.style.display = 'block';
      navWrapper.style.height = '100vh';
      body.style.overflow = 'hidden';
    });
    topMenuClouse.addEventListener('click', function () {
      overlay.classList.remove('active');
      navWrapper.style.display = '';
      navWrapper.style.height = '';
      body.style.overflow = '';
    });
    document.body.addEventListener('keyup', function (e) {
      var key = e.keyCode;
      if (key == 27) {
        overlay.classList.remove('active');
        navWrapper.style.display = '';
        navWrapper.style.height = '';
        body.style.overflow = '';
      }
      ;
    }, false);
    if (overlay) {
      overlay.addEventListener('click', function () {
        overlay.classList.remove('active');
        navWrapper.style.display = '';
        navWrapper.style.height = '';
        body.style.overflow = '';
      });
    }
    liItemsHasChildren.forEach(function (item) {
      item.addEventListener('click', function () {
        if (window.innerWidth <= 991) {
          item.children[1].classList.toggle('active');
          item.children[2].classList.toggle('active');
        }
      });
    });
  }
};
menuMobile();
var navItemsParent = function navItemsParent() {
  var itemsHasChildren = document.querySelectorAll('#primary-nav-menu ul li.menu-item-has-children');
  if (itemsHasChildren) {
    itemsHasChildren.forEach(function (item) {
      item.addEventListener('click', function (e) {
        if (item.children[0].attributes.href.value == '#') {
          e.preventDefault();
        }
      });
    });
  }
};
navItemsParent();
var cookieHidden = function cookieHidden() {
  var cookieBar = document.querySelector('.cookie-bar');
  var btnCookie = document.querySelector('#cookie-yes');
  if (cookieBar) {
    var cookieUser = localStorage.getItem('climatCookieUser');
    if (cookieUser !== 'yes') {
      cookieBar.classList.add('visible');
    }
    btnCookie.addEventListener('click', function (e) {
      localStorage.setItem('climatCookieUser', 'yes');
      cookieBar.classList.remove('visible');
    });
  }
};
cookieHidden();
document.addEventListener("DOMContentLoaded", function () {
  var eventCalllback = function eventCalllback(e) {
    var el = e.target,
      clearVal = el.dataset.phoneClear,
      pattern = el.dataset.phonePattern,
      matrix_def = "+7(___) ___-__-__",
      matrix = pattern ? pattern : matrix_def,
      i = 0,
      def = matrix.replace(/\D/g, ""),
      val = e.target.value.replace(/\D/g, "");
    if (clearVal !== 'false' && e.type === 'blur') {
      if (val.length < matrix.match(/([\_\d])/g).length) {
        e.target.value = '';
        return;
      }
    }
    if (def.length >= val.length) val = def;
    e.target.value = matrix.replace(/./g, function (a) {
      return /[_\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? "" : a;
    });
  };
  //var phone_inputs = document.querySelectorAll('[data-phone-pattern]');
  var phone_inputs = document.querySelectorAll('.phone_mask');
  var _iterator = _createForOfIteratorHelper(phone_inputs),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var elem = _step.value;
      for (var _i = 0, _arr = ['input', 'blur', 'focus']; _i < _arr.length; _i++) {
        var ev = _arr[_i];
        elem.addEventListener(ev, eventCalllback);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
});
function modal() {
  // Модальные окна
  // !function(e){"function"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),"function"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);
  // document.addEventListener('DOMContentLoaded', function() {
  var modalButtons = document.querySelectorAll('.js-open-modal'),
    modal = document.querySelectorAll('.modal'),
    overlay = document.querySelector('.js-overlay-modal'),
    closeButtons = document.querySelectorAll('.js-modal-close'),
    body = document.querySelector('body');
  modalButtons.forEach(function (item) {
    item.addEventListener('click', function (e) {
      e.preventDefault();
      var modalId = this.getAttribute('data-modal'),
        modalElem = document.querySelector('.modal[data-modal="' + modalId + '"]');
      modalElem.classList.add('active');
      overlay.classList.add('active');
      // body.style.overflowY = 'hidden';
      if (item.dataset.overlay == 'all') {
        overlay.style.zIndex = 99;
      }
    }); // end click
  }); // end foreach
  closeButtons.forEach(function (item) {
    item.addEventListener('click', function (e) {
      var parentModal = this.closest('.modal');
      parentModal.classList.remove('active');
      overlay.classList.remove('active');
      overlay.style.zIndex = '';
      body.style.overflowY = '';
    });
  }); // end foreach
  document.body.addEventListener('keyup', function (e) {
    var key = e.keyCode;
    if (key == 27) {
      if (modal.length > 0) {
        if (document.querySelector('.modal.active')) {
          document.querySelector('.modal.active').classList.remove('active');
        }
        overlay.classList.remove('active');
        overlay.style.zIndex = '';
      }
      body.style.overflowY = '';
    }
    ;
  }, false);
  if (overlay) {
    overlay.addEventListener('click', function () {
      if (document.querySelector('.modal.active')) {
        document.querySelector('.modal.active').classList.remove('active');
        overlay.classList.remove('active');
        overlay.style.zIndex = '';
      }
      this.classList.remove('active');
      body.style.overflowY = '';
    });
  }
  // }); // end ready (Модальные окна)
}

modal();

// jQuery
jQuery(document).ready(function ($) {
  function scrollToTop(pxShow, scrollSpeed) {
    // pxShow - height on which the button will show
    // scrollSpeed - how slow / fast you want the button to scroll to top.
    $(window).scroll(function () {
      if ($(window).scrollTop() >= pxShow) {
        $(".btn-to-top").addClass('visible');
        $(".request-call").addClass('btn-top-vision');
      } else {
        $(".btn-to-top").removeClass('visible');
        $(".request-call").removeClass('btn-top-vision');
      }
    });
    $('a.scroll-to-top').on('click', function () {
      $('html, body').animate({
        scrollTop: 0
      }, scrollSpeed);
      return false;
    });
  }
  scrollToTop(400, 400);
  function scrollAnimate() {
    $(document).on('click', 'a.animate-scroll[href^="#"]', function (event) {
      event.preventDefault();
      //var indent = $($.attr(this, 'href')).attr('data-top');
      var indent = $(this).attr('data-top');
      if (indent) {
        indent_top = indent;
      } else {
        indent_top = 0;
      }
      if ($($.attr(this, 'href')).length > 0) {
        $('html, body').animate({
          scrollTop: $($.attr(this, 'href')).offset().top - indent_top
        }, 500);
      }
    });
  }
  scrollAnimate();

  // magnificPopup
  function mfpInit(index) {
    $('.gallery-' + index).magnificPopup({
      type: 'image',
      delegate: '.mfp',
      tClose: 'Закрыть (Esc)',
      tLoading: 'Загрузка...',
      gallery: {
        enabled: true,
        tPrev: 'Назад',
        tNext: 'Вперед',
        tCounter: '%curr% из %total%'
      },
      image: {
        tError: '<a href="%url%">Изображение</a> не удалось загрузить.'
      },
      ajax: {
        tError: '<a href="%url%">Запрос</a> не выполнен.'
      }
    });
  }
  // mfpInit('1');
  // mfpInit('2');
  // mfpInit('3');
  // mfpInit('4');
  // mfpInit('5');
  // mfpInit('6');
  // mfpInit('7');
  // mfpInit('8');
  // mfpInit('9');
  // mfpInit('10');
  // mfpInit('11');
  // mfpInit('12');
  // mfpInit('13');
  // mfpInit('14');
  // mfpInit('15');
  // mfpInit('16');
  // mfpInit('17');
  // mfpInit('18');
  // mfpInit('19');
  // mfpInit('20');
  // mfpInit('all');

  // $('.popup-youtube, .popup-vimeo, .popup-gmaps').magnificPopup({
  // 	disableOn: 700,
  // 	type: 'iframe',
  // 	mainClass: 'mfp-fade',
  //     tClose: 'Закрыть (Esc)',
  // 	removalDelay: 160,
  // 	preloader: false,
  //     fixedContentPos: true,
  //     fixedBgPos: true,
  //     overflowY: 'hidden',
  // });
  //
  // $('.image-popup-fit-width').magnificPopup({
  // 	type: 'image',
  // 	closeOnContentClick: true,
  // 	image: {
  // 		verticalFit: false
  // 	}
  // });
  //
  // $('.image-popup-vertical-fit').magnificPopup({
  // 	type: 'image',
  // 	closeOnContentClick: true,
  // 	mainClass: 'mfp-img-mobile',
  // 	image: {
  // 		verticalFit: true
  // 	}
  //
  // });
});



/***/ }),

/***/ "./src/js/users-actions.js":
/*!*********************************!*\
  !*** ./src/js/users-actions.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   assignWork: () => (/* binding */ assignWork),
/* harmony export */   favoritesPost: () => (/* binding */ favoritesPost),
/* harmony export */   markAllReadActions: () => (/* binding */ markAllReadActions),
/* harmony export */   subscribePost: () => (/* binding */ subscribePost)
/* harmony export */ });
var subscribePost = function subscribePost() {
  var subscribeBtns = document.querySelectorAll('.js-btn-subscribe');
  if (subscribeBtns.length > 0) {
    subscribeBtns.forEach(function (btn) {
      btn.addEventListener('click', function () {
        btn.style.pointerEvents = 'none';
        var formAll = document.querySelector('#form-all');
        var formData = new FormData(formAll);
        formData.append('action', 'subscribe_user_post');
        formData.append('post_id', btn.dataset.post);
        formData.append('post_type', btn.dataset.postType);
        jQuery(document).ready(function ($) {
          $.ajax({
            url: "/wp-admin/admin-ajax.php",
            method: 'post',
            processData: false,
            contentType: false,
            data: formData,
            beforeSend: function beforeSend() {
              // Outputting text while sending
            },
            success: function success(data) {
              data = JSON.parse(data);
              if (data["class"] == 'success') {
                // console.dir('Yes');
                if (btn.dataset.subscr == 'single') {
                  btn.querySelectorAll('span.subscr').forEach(function (item) {
                    item.classList.toggle('active');
                  });
                } else if (btn.dataset.subscr == 'archive') {
                  btn.classList.toggle('active');
                  if (btn.title == 'Subscribe to this media') {
                    btn.title = 'Unfollow this media';
                  } else if (btn.title == 'Unfollow this media') {
                    btn.title = 'Subscribe to this media';
                  }
                  if (btn.title == 'Subscribe to this request') {
                    btn.title = 'Unfollow this request';
                  } else if (btn.title == 'Unfollow this request') {
                    btn.title = 'Subscribe to this request';
                  }
                }
              } else {
                console.dir(data);
              }
            },
            error: function error(jqXHR, text, _error) {
              // Send error text output
              console.log('Ошибка отправки.');
            }
          });
        });
        btn.style.pointerEvents = '';
      });
    });
  }
};
subscribePost();
var favoritesPost = function favoritesPost() {
  var favoritesBtns = document.querySelectorAll('.js-btn-favorites');
  if (favoritesBtns.length > 0) {
    favoritesBtns.forEach(function (btn) {
      btn.addEventListener('click', function () {
        btn.style.pointerEvents = 'none';
        var formAll = document.querySelector('#form-all');
        var formData = new FormData(formAll);
        formData.append('action', 'favorites_user_post');
        formData.append('post_id', btn.dataset.post);
        formData.append('post_type', btn.dataset.postType);
        jQuery(document).ready(function ($) {
          $.ajax({
            url: "/wp-admin/admin-ajax.php",
            method: 'post',
            processData: false,
            contentType: false,
            data: formData,
            beforeSend: function beforeSend() {
              // Outputting text while sending
            },
            success: function success(data) {
              data = JSON.parse(data);
              if (data["class"] == 'success') {
                // console.dir('Yes');

                btn.classList.toggle('active');
                if (btn.title == 'To favorites') {
                  btn.title = 'Remove from favorites';
                } else if (btn.title == 'Remove from favorites') {
                  btn.title = 'To favorites';
                }
              } else {
                console.dir(data);
              }
            },
            error: function error(jqXHR, text, _error2) {
              // Send error text output
              console.log('Ошибка отправки.');
            }
          });
        });
        btn.style.pointerEvents = '';
      });
    });
  }
};
favoritesPost();
function subscribeUserPost(btn) {
  var formAll = document.querySelector('#form-all');
  var formData = new FormData(formAll);
  formData.append('action', 'subscribe_user_post');
  formData.append('post_id', btn.dataset.post);
  jQuery(document).ready(function ($) {
    $.ajax({
      url: "/wp-admin/admin-ajax.php",
      method: 'post',
      processData: false,
      contentType: false,
      data: formData,
      beforeSend: function beforeSend() {
        // Outputting text while sending
      },
      success: function success(data) {
        data = JSON.parse(data);
        if (data["class"] == 'success') {
          // console.dir('Yes');
          // document.querySelector('.modal__title').style.display = 'none'
          // document.querySelector('.request-call-form').innerHTML = '<h3>Thank you, we will contact you shortly!</h3>'
        }
      },
      error: function error(jqXHR, text, _error3) {
        // Send error text output
      }
    });
  });
}
var assignWork = function assignWork() {
  var assignWorkBtns = document.querySelectorAll('.js-assign-work');
  if (assignWorkBtns.length > 0) {
    assignWorkBtns.forEach(function (btn) {
      btn.addEventListener('click', function () {
        console.dir(btn);
        var modal = document.querySelector('.modal[data-modal="' + btn.dataset.modal + '"]');
        modal.querySelector('button').dataset.post = btn.dataset.post;
      });
    });
  }
};
assignWork();
var markAllReadActions = function markAllReadActions() {
  var markAllReadBtn = document.querySelector('.mark-all-read');
  var markReadBtns = document.querySelectorAll('.mark-read');
  if (markAllReadBtn) {
    markAllReadBtn.addEventListener('click', function (e) {
      var formAll = document.querySelector('#form-all');
      var formData = new FormData(formAll);
      formData.append('action', 'mark_all_read');
      formData.append('mark_all', 'yes');
      markReadAjax(formData, markAllReadBtn, markReadBtns);
    });
    markReadBtns.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        var formAll = document.querySelector('#form-all');
        var formData = new FormData(formAll);
        formData.append('action', 'mark_all_read');
        formData.append('post_id', btn.dataset.post);
        markReadAjax(formData, btn, '');
      });
    });
  }
};
markAllReadActions();
function markReadAjax(formData, btn, btns) {
  jQuery(document).ready(function ($) {
    $.ajax({
      url: "/wp-admin/admin-ajax.php",
      method: 'post',
      processData: false,
      contentType: false,
      data: formData,
      beforeSend: function beforeSend() {
        // Outputting text while sending
      },
      success: function success(data) {
        data = JSON.parse(data);
        if (data["class"] == 'success') {
          // console.dir('Yes');
          if (btns) {
            btn.classList.add('active');
            btns.forEach(function (btn) {
              btn.classList.add('active');
              if (btn.title == 'Mark as read') {
                btn.title = 'Mark as unread';
              } else if (btn.title == 'Mark as unread') {
                btn.title = 'Mark as read';
              }
            });
          } else {
            btn.classList.toggle('active');
            if (btn.title == 'Mark as read') {
              btn.title = 'Mark as unread';
            } else if (btn.title == 'Mark as unread') {
              btn.title = 'Mark as read';
            }
          }
        } else {
          console.dir(data);
        }
      },
      error: function error(jqXHR, text, _error4) {
        // Send error text output
        console.log('Ошибка отправки.');
      }
    });
  });
}


/***/ }),

/***/ "./src/scss/main.scss":
/*!****************************!*\
  !*** ./src/scss/main.scss ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _js_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/main.js */ "./src/js/main.js");
/* harmony import */ var _js_form_input_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/form-input.js */ "./src/js/form-input.js");
/* harmony import */ var _js_form_input_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_js_form_input_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _js_auth_reg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/auth-reg.js */ "./src/js/auth-reg.js");
/* harmony import */ var _js_author_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/author.js */ "./src/js/author.js");
/* harmony import */ var _js_author_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_author_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _js_add_post_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js/add-post.js */ "./src/js/add-post.js");
/* harmony import */ var _js_add_post_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_js_add_post_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _js_add_employee_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./js/add-employee.js */ "./src/js/add-employee.js");
/* harmony import */ var _js_add_employee_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_js_add_employee_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _js_users_actions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./js/users-actions.js */ "./src/js/users-actions.js");
/* harmony import */ var _js_filtr_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./js/filtr.js */ "./src/js/filtr.js");
/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! .//scss/main.scss */ "./src/scss/main.scss");









// scss

})();

/******/ })()
;
//# sourceMappingURL=bundle.min.js.map